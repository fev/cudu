- hosts: wilma
  become: true
  vars_files:
  - vars/main.yml
  collections:
  - jamgo.base

  tasks:
  
# ... Wait for postgres back active.

  - name: Wait for postgres back active
    include_role:
      name: kube-utils
      tasks_from: kube-wait-pod
    vars:
      pod_name: "{{postgres_back_service}}"
      pod_namespace: "{{postgres_back_kube_ns}}"
      pod_port: 5432

# ... Create database.

  - name: Check for project db
    command: kubectl exec {{postgres_back_service}} -n {{postgres_back_kube_ns}} -- sh -c 'psql -U {{postgres_back_user}} -lqtA | grep -q "{{cudu_db_name}}|"'
    changed_when: false
    failed_when: false
    no_log: true
    register: project_db_check

  - name: Create project db
    command: "{{item}}"
    with_items:
      - kubectl exec {{postgres_back_service}} -n {{postgres_back_kube_ns}} -- psql -U {{postgres_back_user}} -c 'create database "{{cudu_db_name}}";'
      - kubectl exec {{postgres_back_service}} -n {{postgres_back_kube_ns}} -- psql -U {{postgres_back_user}} -c "create user {{cudu_db_user}} with encrypted password '{{cudu_db_password}}';"
      - kubectl exec {{postgres_back_service}} -n {{postgres_back_kube_ns}} -- psql -U {{postgres_back_user}} -c 'grant all privileges on database "{{cudu_db_name}}" to {{cudu_db_user}};'
    when: project_db_check.rc != 0

# ... Create project service

  - name: Create project service
    include_role:
      name: kube-utils
      tasks_from: kube-apply-template
    vars:
      template_name: "{{cudu_service}}-service"

# ... Wait for project active.

  - name: Wait for project active
    include_role:
      name: kube-utils
      tasks_from: kube-wait-pod
    vars:
      pod_name: "{{cudu_service}}"
      pod_namespace: "{{cudu_kube_ns}}"
      pod_port: 80
